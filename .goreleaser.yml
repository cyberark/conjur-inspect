---
project_name: conjur-preflight

before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod tidy
    # you may remove this if you don't need go generate
    - go generate ./...

builds:
  - main: ./cmd/conjur-preflight
    binary: conjur-preflight
    env:
      - CGO_ENABLED=0
    # Tag 'netgo' is a Go build tag that ensures a pure Go networking stack
    # in the resulting binary instead of using the default host's stack to
    # ensure a fully static artifact that has no dependencies.
    flags:
      - -tags=netgo
      - -a
    goos:
      - linux
    goamd64:
      - v1
    # The `Tag` override is there to provide the git commit information in the
    # final binary. See `Static long version tags` in the `Building` section
    # of `CONTRIBUTING.md` for more information.
    ldflags:
      - -w
      - -X "github.com/cyberark/conjur-preflight/pkg/version.Tag={{ .ShortCommit }}"
      - -X "github.com/cyberark/conjur-preflight/pkg/version.Version={{ .Env.VERSION }}"
      - -X "github.com/cyberark/conjur-preflight/pkg/version.BuildNumber={{ .Env.BUILD_NUMBER }}"
    hooks:
      post:
        # Copy the binary out into the <dist> path, and give the copy the name we
        # want in the release <extra_files>.
        - mkdir -p "{{ dir .Path }}/../binaries"
        - cp "{{ .Path }}" "{{ dir .Path }}/../binaries/conjur-preflight{{ .Target }}{{ .Ext }}"

archives:
  - id: conjur-preflight-archive
    files:
      - CHANGELOG.md
      - LICENSE
      - README.md
    name_template: "{{.ProjectName}}_{{.Env.VERSION}}_{{.Os}}_{{.Arch}}"
    wrap_in_directory: true

checksum:
  name_template: "SHA256SUMS.txt"

nfpms:
  - bindir: /usr/bin
    description: CyberArk Conjur Enterprise Preflight Qualification Tool
    file_name_template: "{{.ProjectName}}_{{.Env.VERSION}}_{{.Arch}}"
    formats:
      - deb
      - rpm
    homepage: https://conjur.org
    license: "Apache 2.0"
    maintainer: CyberArk Maintainers <conj_maintainers@cyberark.com>
    vendor: CyberArk

snapshot:
  name_template: "{{ .Tag }}-next"

release:
  disable: true
  draft: true
  extra_files:
    - glob: NOTICES.txt
    - glob: CHANGELOG.md
    - glob: LICENSE
    - glob: dist/binaries

# Changelog management and publishing is handled by Jenkins-based release
# automation
changelog:
  skip: true
